import logging
import asyncio
import re
from datetime import datetime, timedelta, timezone

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ChatPermissions
from aiogram.enums import ParseMode
from aiogram.client.bot import DefaultBotProperties

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞ ====
API_TOKEN = '7461983178:AAEdmsfUECEst173CozI2QFBB6wI0P5Wh0Y'

# ==== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ====
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# ==== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ====
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# ==== –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ====
def parse_duration(text):
    text = text.strip().lower()
    units_map = {
        '–º–∏–Ω—É—Ç': 'minutes', '–º–∏–Ω': 'minutes', '–º': 'minutes',
        '—á–∞—Å': 'hours', '—á–∞—Å–æ–≤': 'hours', '—á': 'hours',
        '–¥–µ–Ω—å': 'days', '–¥–Ω—è': 'days', '–¥–Ω–µ–π': 'days', '–¥': 'days',
        '–Ω–µ–¥–µ–ª—è': 'weeks', '–Ω–µ–¥–µ–ª–∏': 'weeks', '–Ω–µ–¥–µ–ª—å': 'weeks', '–Ω': 'weeks',
        '–º–µ—Å—è—Ü': 'days', '–º–µ—Å—è—Ü–∞': 'days', '–º–µ—Å—è—Ü–µ–≤': 'days'
    }
    match = re.match(r'(\d+)\s*(\D+)', text)
    if not match:
        return None
    val, unit_raw = match.groups()
    val = int(val)
    for key in units_map:
        if unit_raw.startswith(key):
            unit = units_map[key]
            return timedelta(days=val * 30) if '–º–µ—Å—è—Ü' in key else timedelta(**{unit: val})
    return None

def build_user_link(name, user_id):
    return f'<a href="tg://user?id={user_id}">{name}</a>'

# ==== –ú–∞—Ç-–ø–∞—Ç—Ç–µ—Ä–Ω—ã ====
INSULT_PATTERNS = [
    r"\b(?:—è\s)?(?:—Ç–≤–æ—é\s)?–º–∞—Ç—å\s?(–µ–±–∞–ª|–µ–±—É|–∏–º–µ–ª)",
    r"\b(–¥–æ–ª–±–æ—ë–±|–¥–æ–ª–±–∞–µ–±|–¥–µ–±–∏–ª|–∏–¥–∏–æ—Ç|—Ç—É–ø–∏—Ü–∞|—à–ª—é—Ö–∞|—à–∞–ª–∞–≤–∞|–º—Ä–∞–∑—å|—Å—É–∫–∞|–ø–∏–¥–æ—Ä|–ø–∏–¥—Ä|—É—ë–±–æ–∫|–µ–±–ª–∞–Ω|—á–º–æ|–≥–æ–Ω–¥–æ–Ω|–≥–Ω–∏–¥–∞|–∫–æ–∑—ë–ª|–ø–µ—Ç—É—Ö|–¥–∞—É–Ω|–∫—Ä–µ—Ç–∏–Ω|–∏–Ω–≤–∞–ª–∏–¥|–±–æ–ª—å–Ω–æ–π –Ω–∞ –≥–æ–ª–æ–≤—É|—á—É—à–ø–∞–Ω|—É–µ–±–∞–Ω|—Ö—É–µ—Å–æ—Å|–≥–∞–≤–Ω–æ–µ–¥|–µ–±–∞–∫–∞|–Ω–µ–¥–æ—É–º–æ–∫|—Ç–≤–∞—Ä—å|–ø—Å–∏–Ω–∞|—Å–æ—Å—É–Ω–æ–∫|–º—É–¥–∏–ª–∞|–≥–æ–≤–Ω—é–∫|–¥–µ–≥–µ–Ω–µ—Ä–∞—Ç|–ø–æ–ø—Ä–æ—à–∞–π–∫–∞|–ø–æ–ø—Ä–æ—à–∞–π–Ω–∏–∫|–ø–∏–¥–∞—Ä|—Ö—É–π–µ–≥–ª–æ—Ç|—É–µ–±–∞–∫|–º—Ä–æ–∑—å|—à–ª—É—Ö–∞|–æ—Ç—Å–æ—Å–∏|–æ—Ç—Å–æ—Å–µ|–æ—Ç—Å–∞—Å–µ|—Å–æ—Å–∏|—Ö—É–π|–ø–æ—Ä–Ω–æ|—Å–µ–∫—Å|—Å–∏—Å—å–∫–∏|–ø–∏—Å—å–∫–∏|–±–ª—è–¥–æ—Ç–∞|–±–ª—è–¥–æ—Ç–∞|—Å–æ—Å–∏|—Ç–≤–∞—Ä—å)\b",
    r"–Ω–∞—Ö—É–π|–Ω–∞ —Ö—É–π|–∏–¥–∏\s+–≤\s+–∂–æ–ø—É|–µ–±–∞–Ω—ã–π\s+—Ä–æ—Ç|–µ–±–∞—Ç—å\s+—Ç–µ–±—è|—Å—É–∫–∞\s+–±–ª—è–¥—å"
]

def contains_bad_words(text: str) -> bool:
    text = text.lower()
    return any(re.search(pattern, text) for pattern in INSULT_PATTERNS)

# ==== –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ====
@dp.message(F.text)
async def handle_message(message: Message):
    chat_type = message.chat.type
    if chat_type not in ['group', 'supergroup'] or message.from_user.is_bot:
        return

    text = message.text.strip()
    text_lower = text.lower()
    logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or message.from_user.id}: {text}")

    # –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∞–≤–∏–ª–∞
    if text_lower == '–ø—Ä–∞–≤–∏–ª–∞':
        rules_text = (
            "üóì –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞:\n\n"
            "üõë –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω / –º—É—Ç –∑–∞ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:\n\n"
            "1. –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ —Ñ–ª—É–¥ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
            "2. –ü–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ.\n"
            "3. –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
            "4. –ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏.\n"
            "5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–º–µ—Ä–æ–≤, —Å—Ç–æ–Ω–æ–≤ –∏–ª–∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.\n"
            "6. –¢–æ—Ä–≥–æ–≤–ª—è –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
            "7. –†–µ–∫–ª–∞–º–∞ –≤ –ª—é–±–æ–º –≤–∏–¥–µ.\n"
            "8. –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –≤ –∞–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
            "9. –ü—Ä–æ–≤–æ–∫–∞—Ü–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.\n"
            "10. –ü–æ–ø—ã—Ç–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
            "11. –û–±–≤–∏–Ω–µ–Ω–∏—è –≤ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–µ –±–µ–∑ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤.\n"
            "12. –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –≤ –∞–¥—Ä–µ—Å —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
            "13. –ñ–∞–ª–æ–±—ã –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å—Ç–æ–≤.\n"
            "14. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.\n"
            "15. –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Å—Ö–µ–º–∞—Ö –æ–±–º–∞–Ω–∞.\n"
            "16. –û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ–º.\n"
            "17. –ñ–µ—Å—Ç–æ–∫–∏–π –∏–ª–∏ —à–æ–∫–∏—Ä—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç.\n"
            "18. –ü—Ä–∏–∑—ã–≤—ã –≤—ã—Å—Ç—É–ø–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∞–≤—Ç–æ—Ä–∞.\n"
            "19. –ù–µ–Ω—É–∂–Ω—ã–π —Ñ–ª—É–¥ –∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ.\n"
            "20. –®—É—Ç–∫–∏ –Ω–∞ —Ç–µ–º—É –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞.\n"
            "21. –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã—Ö —á—É–≤—Å—Ç–≤ –∏ –≤–µ—Ä–æ–∏—Å–ø–æ–≤–µ–¥–∞–Ω–∏–π.\n"
            "22. –†–∞–∑–º–µ—â–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∏—Ö —Å–æ–≥–ª–∞—Å–∏—è.\n"
            "23. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∂–Ω–æ–π –∏–ª–∏ –≤–≤–æ–¥—è—â–µ–π –≤ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n"
            "24. –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.\n"
            "25. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏–ª–∏ –æ–±–º–µ–Ω –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏.\n\n"
            "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - @IUVB76I, –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–µ—Ä—ã –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ä—É—à–∏–ª–∏ –ø—Ä–∞–≤–∏–ª–∞.\n\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –Ω–∞ —Ä–∞–∑–Ω—ã–π —Å—Ä–æ–∫. –ú–µ—Ä—ã –Ω–∞–∫–∞–∑–∞–Ω–∏—è –º–æ–≥—É—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∏ –≤–æ–∑–º–æ–∂–Ω–∞ —É—Å—Ç–Ω–∞—è –ø—Ä–æ—Å—å–±–∞ –æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑."
        )
        await message.answer(rules_text)
        return

    # –ú—É—Ç –∑–∞ –º–∞—Ç
    if contains_bad_words(text):
        until = datetime.now(timezone.utc) + timedelta(minutes=30)
        try:
            await bot.restrict_chat_member(
                message.chat.id,
                message.from_user.id,
                permissions=ChatPermissions(can_send_messages=False),
                until_date=until
            )
            await message.answer(
                f"üö´ {build_user_link(message.from_user.full_name, message.from_user.id)} –ø–æ–ª—É—á–∏–ª –º—É—Ç –Ω–∞ 30 –º–∏–Ω—É—Ç\n"
                f"üí¨ –ü—Ä–∏—á–∏–Ω–∞: <i>–º–∞—Ç</i>"
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ –∑–∞ –º–∞—Ç: {e}")
            await message.reply("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –º—É—Ç. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∞ –±–æ—Ç–∞.")
        return

    # –ö–æ–º–∞–Ω–¥—ã: –º—É—Ç / –±–∞–Ω / —Ä–∞–∑–º—É—Ç
    lines = text.split('\n')
    cmd_line = lines[0].lower().strip()
    reason = lines[1].strip() if len(lines) > 1 else "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"

    if cmd_line.startswith('–º—É—Ç'):
        if not message.reply_to_message:
            await message.reply("üîá –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä:\n–º—É—Ç 10 –º–∏–Ω—É—Ç\n—Å–ø–∞–º")
            return
        target = message.reply_to_message.from_user
        duration_str = cmd_line.split(' ', 1)[1] if ' ' in cmd_line else "5 –º–∏–Ω—É—Ç"
        duration = parse_duration(duration_str)
        if not duration:
            await message.reply("‚ùóÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: 10 –º–∏–Ω—É—Ç, 1 —á–∞—Å, 2 –¥–Ω—è.")
            return
        until = datetime.now(timezone.utc) + duration
        try:
            await bot.restrict_chat_member(
                message.chat.id,
                target.id,
                permissions=ChatPermissions(can_send_messages=False),
                until_date=until
            )
            await message.reply(
                f"üîá {build_user_link(target.full_name, target.id)} –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration_str}\n"
                f"üí¨ –ü—Ä–∏—á–∏–Ω–∞: {reason}"
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ: {e}")
            await message.reply(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    elif cmd_line == '–±–∞–Ω':
        if not message.reply_to_message:
            await message.reply("üî® –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä:\n–±–∞–Ω\n—Ñ–ª—É–¥")
            return
        target = message.reply_to_message.from_user
        try:
            await bot.ban_chat_member(message.chat.id, target.id)
            await message.reply(
                f"üî¥ {build_user_link(target.full_name, target.id)} –∑–∞–±–∞–Ω–µ–Ω\nüí¨ –ü—Ä–∏—á–∏–Ω–∞: {reason}"
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ: {e}")
            await message.reply(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    elif cmd_line == '—Ä–∞–∑–º—É—Ç':
        if not message.reply_to_message:
            await message.reply("üîà –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä:\n—Ä–∞–∑–º—É—Ç")
            return
        target = message.reply_to_message.from_user
        try:
            await bot.restrict_chat_member(
                message.chat.id,
                target.id,
                permissions=ChatPermissions(
                    can_send_messages=True,
